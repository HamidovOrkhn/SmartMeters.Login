// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using SmartMeterControl.Access_MS.Database;

namespace SmartMeterControl.Access_MS.Migrations
{
    [DbContext(typeof(GlobalDataContext))]
    [Migration("20220202065058_GLOBAL")]
    partial class GLOBAL
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmartMeterControl.Access_MS.Models.Global.AppLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionType")
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("ACTIONTYPE");

                    b.Property<DateTime>("DDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DDATE");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("IPADDRESS");

                    b.Property<int>("PermissionId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PERMISSIONID");

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("USERID");

                    b.HasKey("Id");

                    b.ToTable("USER_LOG_GL");
                });

            modelBuilder.Entity("SmartMeterControl.Access_MS.Models.Global.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATEDDATE");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("IMAGEURL");

                    b.Property<int>("IsHttps")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ISHTTPS");

                    b.Property<string>("SiteUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("SITEURL");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("TITLE");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATEDDATE");

                    b.HasKey("Id");

                    b.ToTable("ROLE_GLOBAL");
                });

            modelBuilder.Entity("SmartMeterControl.Access_MS.Models.Global.RolePerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATEDDATE");

                    b.Property<int>("RoleId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROLEID");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATEDDATE");

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("USERID");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("ROLEPERM_GLOBAL");
                });

            modelBuilder.Entity("SmartMeterControl.Access_MS.Models.Global.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATEDDATE");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DEPARTMENTID");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("EMAIL");

                    b.Property<int>("IsActive")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ISACTIVE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("NAME");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("PHONE");

                    b.Property<string>("Pin")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("PIN");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("POSITION");

                    b.Property<string>("RToken")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("RTOKEN");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("SURNAME");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATEDDATE");

                    b.HasKey("Id");

                    b.HasIndex("Pin")
                        .IsUnique();

                    b.ToTable("USER_GLOBAL");
                });

            modelBuilder.Entity("SmartMeterControl.Access_MS.Models.Global.RolePerm", b =>
                {
                    b.HasOne("SmartMeterControl.Access_MS.Models.Global.Role", "Role")
                        .WithMany("RolePerms")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("U_ROLE_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartMeterControl.Access_MS.Models.Global.User", "User")
                        .WithMany("RolePerms")
                        .HasForeignKey("UserId")
                        .HasConstraintName("U_USER_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartMeterControl.Access_MS.Models.Global.Role", b =>
                {
                    b.Navigation("RolePerms");
                });

            modelBuilder.Entity("SmartMeterControl.Access_MS.Models.Global.User", b =>
                {
                    b.Navigation("RolePerms");
                });
#pragma warning restore 612, 618
        }
    }
}
